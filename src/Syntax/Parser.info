-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from src/Syntax/Parser.y
-----------------------------------------------------------------------------

state 45 contains 1 reduce/reduce conflicts.
state 47 contains 1 reduce/reduce conflicts.

terminal if is unused
terminal then is unused
terminal else is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseDecls -> Decls                         (0)
	LowerId -> lower                                   (1)
	UpperId -> upper                                   (2)
	Lit -> str                                         (3)
	Lit -> num                                         (4)
	RawType -> LowerId                                 (5)
	RawType -> UpperId                                 (6)
	RawType -> '(' Type ')'                            (7)
	Types ->                                           (8)
	Types -> Types RawType                             (9)
	Type -> RawType                                    (10)
	Type -> UpperId RawType Types                      (11)
	Type -> Type '->' RawType                          (12)
	Pat -> LowerId                                     (13)
	Pat -> Lit                                         (14)
	Pat -> '(' Pat ')'                                 (15)
	Ann -> Pat                                         (16)
	Ann -> '(' Pat ':' Type ')'                        (17)
	Atom -> Lit                                        (18)
	Atom -> LowerId                                    (19)
	Atom -> UpperId                                    (20)
	Atom -> '(' Expr ')'                               (21)
	Atom -> Atom '+' Atom                              (22)
	Atom -> Atom '-' Atom                              (23)
	Atom -> Atom '*' Atom                              (24)
	Atom -> Atom '/' Atom                              (25)
	Atom -> Atom '>' Atom                              (26)
	Atom -> Atom '<' Atom                              (27)
	Atom -> Atom '>=' Atom                             (28)
	Atom -> Atom '<=' Atom                             (29)
	Atom -> Atom '==' Atom                             (30)
	Assign -> Ann '=' Expr                             (31)
	Expr -> '\\' Ann '->' Expr                         (32)
	Expr -> Call                                       (33)
	Expr -> do open Sttms close                        (34)
	Expr -> Assign                                     (35)
	Expr -> Case                                       (36)
	Call -> Call Atom                                  (37)
	Call -> Atom                                       (38)
	Sttms ->                                           (39)
	Sttms -> Expr                                      (40)
	Sttms -> Expr end Sttms                            (41)
	Args ->                                            (42)
	Args -> Args Ann                                   (43)
	CaseClause -> Pat '->' Expr                        (44)
	CaseClauses -> CaseClause                          (45)
	CaseClauses -> CaseClauses end CaseClause          (46)
	Case -> case Expr of open CaseClauses close        (47)
	TypesGen ->                                        (48)
	TypesGen -> LowerId TypesGen                       (49)
	SumClause -> '|' UpperId Types                     (50)
	ProductClause -> LowerId ':' Type                  (51)
	SumClauses ->                                      (52)
	SumClauses -> SumClauses SumClause                 (53)
	ProductClauses -> ProductClause                    (54)
	ProductClauses -> ProductClauses ',' ProductClause   (55)
	TypeDeclBody -> SumClause SumClauses               (56)
	TypeDeclBody -> '{' ProductClauses '}'             (57)
	TypeDeclBody -> '{' '}'                            (58)
	TypeDeclBody -> Type                               (59)
	OptRet ->                                          (60)
	OptRet -> ':' Type                                 (61)
	Decl -> type UpperId TypesGen '=' TypeDeclBody     (62)
	Decl -> let LowerId Args OptRet '=' Expr           (63)
	Decls ->                                           (64)
	Decls -> Decl Decls                                (65)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	lower          { WithBounds (TknLowerId _) _ }
	upper          { WithBounds (TknUpperId _) _ }
	str            { WithBounds (TknLStr _) _ }
	num            { WithBounds (TknNumber _) _ }
	let            { WithBounds TknKwLet _ }
	type           { WithBounds TknKwType _ }
	do             { WithBounds TknKwDo _ }
	case           { WithBounds TknKwCase _ }
	of             { WithBounds TknKwOf _ }
	if             { WithBounds TknKwIf _ }
	then           { WithBounds TknKwThen _ }
	else           { WithBounds TknKwElse _ }
	'='            { WithBounds TknEq _ }
	'('            { WithBounds TknLPar _ }
	')'            { WithBounds TknRPar _ }
	'{'            { WithBounds TknLBrace _ }
	'}'            { WithBounds TknRBrace _ }
	open           { WithBounds TknOpen _ }
	end            { WithBounds TknEnd _ }
	close          { WithBounds TknClose _ }
	'->'           { WithBounds TknRArrow _ }
	'\\'           { WithBounds TknSlash _ }
	'|'            { WithBounds TknPipe _ }
	':'            { WithBounds TknColon _ }
	','            { WithBounds TknComma _ }
	'+'            { WithBounds (TknSymbol "+") _ }
	'-'            { WithBounds (TknSymbol "-") _ }
	'*'            { WithBounds (TknSymbol "*") _ }
	'/'            { WithBounds (TknSymbol "/") _ }
	'>'            { WithBounds (TknSymbol ">") _ }
	'<'            { WithBounds (TknSymbol "<") _ }
	'>='           { WithBounds (TknSymbol ">=") _ }
	'<='           { WithBounds (TknSymbol "<=") _ }
	'=='           { WithBounds (TknSymbol "==") _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseDecls rule  0
	LowerId         rule  1
	UpperId         rule  2
	Lit             rules 3, 4
	RawType         rules 5, 6, 7
	Types           rules 8, 9
	Type            rules 10, 11, 12
	Pat             rules 13, 14, 15
	Ann             rules 16, 17
	Atom            rules 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
	Assign          rule  31
	Expr            rules 32, 33, 34, 35, 36
	Call            rules 37, 38
	Sttms           rules 39, 40, 41
	Args            rules 42, 43
	CaseClause      rule  44
	CaseClauses     rules 45, 46
	Case            rule  47
	TypesGen        rules 48, 49
	SumClause       rule  50
	ProductClause   rule  51
	SumClauses      rules 52, 53
	ProductClauses  rules 54, 55
	TypeDeclBody    rules 56, 57, 58, 59
	OptRet          rules 60, 61
	Decl            rules 62, 63
	Decls           rules 64, 65

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parseDecls -> . Decls                        (rule 0)

	let            shift, and enter state 5
	type           shift, and enter state 6
	%eof           reduce using rule 64

	Decl           goto state 3
	Decls          goto state 4

State 1

	LowerId -> . lower                                  (rule 1)

	lower          shift, and enter state 2


State 2

	LowerId -> lower .                                  (rule 1)

	lower          reduce using rule 1
	upper          reduce using rule 1
	str            reduce using rule 1
	num            reduce using rule 1
	let            reduce using rule 1
	type           reduce using rule 1
	of             reduce using rule 1
	'='            reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'}'            reduce using rule 1
	end            reduce using rule 1
	close          reduce using rule 1
	'->'           reduce using rule 1
	'|'            reduce using rule 1
	':'            reduce using rule 1
	','            reduce using rule 1
	'+'            reduce using rule 1
	'-'            reduce using rule 1
	'*'            reduce using rule 1
	'/'            reduce using rule 1
	'>'            reduce using rule 1
	'<'            reduce using rule 1
	'>='           reduce using rule 1
	'<='           reduce using rule 1
	'=='           reduce using rule 1
	%eof           reduce using rule 1


State 3

	Decls -> Decl . Decls                               (rule 65)

	let            shift, and enter state 5
	type           shift, and enter state 6
	%eof           reduce using rule 64

	Decl           goto state 3
	Decls          goto state 10

State 4

	%start_parseDecls -> Decls .                        (rule 0)

	%eof           accept


State 5

	Decl -> let . LowerId Args OptRet '=' Expr          (rule 63)

	lower          shift, and enter state 2

	LowerId        goto state 9

State 6

	Decl -> type . UpperId TypesGen '=' TypeDeclBody    (rule 62)

	upper          shift, and enter state 8

	UpperId        goto state 7

State 7

	Decl -> type UpperId . TypesGen '=' TypeDeclBody    (rule 62)

	lower          shift, and enter state 2
	'='            reduce using rule 48

	LowerId        goto state 12
	TypesGen       goto state 13

State 8

	UpperId -> upper .                                  (rule 2)

	lower          reduce using rule 2
	upper          reduce using rule 2
	str            reduce using rule 2
	num            reduce using rule 2
	let            reduce using rule 2
	type           reduce using rule 2
	of             reduce using rule 2
	'='            reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'}'            reduce using rule 2
	end            reduce using rule 2
	close          reduce using rule 2
	'->'           reduce using rule 2
	'|'            reduce using rule 2
	','            reduce using rule 2
	'+'            reduce using rule 2
	'-'            reduce using rule 2
	'*'            reduce using rule 2
	'/'            reduce using rule 2
	'>'            reduce using rule 2
	'<'            reduce using rule 2
	'>='           reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	%eof           reduce using rule 2


State 9

	Decl -> let LowerId . Args OptRet '=' Expr          (rule 63)

	lower          reduce using rule 42
	str            reduce using rule 42
	num            reduce using rule 42
	'='            reduce using rule 42
	'('            reduce using rule 42
	':'            reduce using rule 42

	Args           goto state 11

State 10

	Decls -> Decl Decls .                               (rule 65)

	%eof           reduce using rule 65


State 11

	Args -> Args . Ann                                  (rule 43)
	Decl -> let LowerId Args . OptRet '=' Expr          (rule 63)

	lower          shift, and enter state 2
	str            shift, and enter state 21
	num            shift, and enter state 22
	'='            reduce using rule 60
	'('            shift, and enter state 23
	':'            shift, and enter state 24

	LowerId        goto state 16
	Lit            goto state 17
	Pat            goto state 18
	Ann            goto state 19
	OptRet         goto state 20

State 12

	TypesGen -> LowerId . TypesGen                      (rule 49)

	lower          shift, and enter state 2
	'='            reduce using rule 48

	LowerId        goto state 12
	TypesGen       goto state 15

State 13

	Decl -> type UpperId TypesGen . '=' TypeDeclBody    (rule 62)

	'='            shift, and enter state 14


State 14

	Decl -> type UpperId TypesGen '=' . TypeDeclBody    (rule 62)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	'('            shift, and enter state 29
	'{'            shift, and enter state 36
	'|'            shift, and enter state 37

	LowerId        goto state 25
	UpperId        goto state 26
	RawType        goto state 27
	Type           goto state 33
	SumClause      goto state 34
	TypeDeclBody   goto state 35

State 15

	TypesGen -> LowerId TypesGen .                      (rule 49)

	'='            reduce using rule 49


State 16

	Pat -> LowerId .                                    (rule 13)

	lower          reduce using rule 13
	str            reduce using rule 13
	num            reduce using rule 13
	'='            reduce using rule 13
	'('            reduce using rule 13
	')'            reduce using rule 13
	'->'           reduce using rule 13
	':'            reduce using rule 13


State 17

	Pat -> Lit .                                        (rule 14)

	lower          reduce using rule 14
	str            reduce using rule 14
	num            reduce using rule 14
	'='            reduce using rule 14
	'('            reduce using rule 14
	')'            reduce using rule 14
	'->'           reduce using rule 14
	':'            reduce using rule 14


State 18

	Ann -> Pat .                                        (rule 16)

	lower          reduce using rule 16
	str            reduce using rule 16
	num            reduce using rule 16
	'='            reduce using rule 16
	'('            reduce using rule 16
	'->'           reduce using rule 16
	':'            reduce using rule 16


State 19

	Args -> Args Ann .                                  (rule 43)

	lower          reduce using rule 43
	str            reduce using rule 43
	num            reduce using rule 43
	'='            reduce using rule 43
	'('            reduce using rule 43
	':'            reduce using rule 43


State 20

	Decl -> let LowerId Args OptRet . '=' Expr          (rule 63)

	'='            shift, and enter state 32


State 21

	Lit -> str .                                        (rule 3)

	lower          reduce using rule 3
	upper          reduce using rule 3
	str            reduce using rule 3
	num            reduce using rule 3
	let            reduce using rule 3
	type           reduce using rule 3
	of             reduce using rule 3
	'='            reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	end            reduce using rule 3
	close          reduce using rule 3
	'->'           reduce using rule 3
	':'            reduce using rule 3
	'+'            reduce using rule 3
	'-'            reduce using rule 3
	'*'            reduce using rule 3
	'/'            reduce using rule 3
	'>'            reduce using rule 3
	'<'            reduce using rule 3
	'>='           reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	%eof           reduce using rule 3


State 22

	Lit -> num .                                        (rule 4)

	lower          reduce using rule 4
	upper          reduce using rule 4
	str            reduce using rule 4
	num            reduce using rule 4
	let            reduce using rule 4
	type           reduce using rule 4
	of             reduce using rule 4
	'='            reduce using rule 4
	'('            reduce using rule 4
	')'            reduce using rule 4
	end            reduce using rule 4
	close          reduce using rule 4
	'->'           reduce using rule 4
	':'            reduce using rule 4
	'+'            reduce using rule 4
	'-'            reduce using rule 4
	'*'            reduce using rule 4
	'/'            reduce using rule 4
	'>'            reduce using rule 4
	'<'            reduce using rule 4
	'>='           reduce using rule 4
	'<='           reduce using rule 4
	'=='           reduce using rule 4
	%eof           reduce using rule 4


State 23

	Pat -> '(' . Pat ')'                                (rule 15)
	Ann -> '(' . Pat ':' Type ')'                       (rule 17)

	lower          shift, and enter state 2
	str            shift, and enter state 21
	num            shift, and enter state 22
	'('            shift, and enter state 31

	LowerId        goto state 16
	Lit            goto state 17
	Pat            goto state 30

State 24

	OptRet -> ':' . Type                                (rule 61)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	'('            shift, and enter state 29

	LowerId        goto state 25
	UpperId        goto state 26
	RawType        goto state 27
	Type           goto state 28

State 25

	RawType -> LowerId .                                (rule 5)

	lower          reduce using rule 5
	upper          reduce using rule 5
	let            reduce using rule 5
	type           reduce using rule 5
	'='            reduce using rule 5
	'('            reduce using rule 5
	')'            reduce using rule 5
	'}'            reduce using rule 5
	'->'           reduce using rule 5
	'|'            reduce using rule 5
	','            reduce using rule 5
	%eof           reduce using rule 5


State 26

	RawType -> UpperId .                                (rule 6)
	Type -> UpperId . RawType Types                     (rule 11)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	let            reduce using rule 6
	type           reduce using rule 6
	'='            reduce using rule 6
	'('            shift, and enter state 29
	')'            reduce using rule 6
	'}'            reduce using rule 6
	'->'           reduce using rule 6
	','            reduce using rule 6
	%eof           reduce using rule 6

	LowerId        goto state 25
	UpperId        goto state 62
	RawType        goto state 63

State 27

	Type -> RawType .                                   (rule 10)

	let            reduce using rule 10
	type           reduce using rule 10
	'='            reduce using rule 10
	')'            reduce using rule 10
	'}'            reduce using rule 10
	'->'           reduce using rule 10
	','            reduce using rule 10
	%eof           reduce using rule 10


State 28

	Type -> Type . '->' RawType                         (rule 12)
	OptRet -> ':' Type .                                (rule 61)

	'='            reduce using rule 61
	'->'           shift, and enter state 44


State 29

	RawType -> '(' . Type ')'                           (rule 7)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	'('            shift, and enter state 29

	LowerId        goto state 25
	UpperId        goto state 26
	RawType        goto state 27
	Type           goto state 61

State 30

	Pat -> '(' Pat . ')'                                (rule 15)
	Ann -> '(' Pat . ':' Type ')'                       (rule 17)

	')'            shift, and enter state 59
	':'            shift, and enter state 60


State 31

	Pat -> '(' . Pat ')'                                (rule 15)

	lower          shift, and enter state 2
	str            shift, and enter state 21
	num            shift, and enter state 22
	'('            shift, and enter state 31

	LowerId        goto state 16
	Lit            goto state 17
	Pat            goto state 58

State 32

	Decl -> let LowerId Args OptRet '=' . Expr          (rule 63)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	str            shift, and enter state 21
	num            shift, and enter state 22
	do             shift, and enter state 54
	case           shift, and enter state 55
	'('            shift, and enter state 56
	'\\'           shift, and enter state 57

	LowerId        goto state 45
	UpperId        goto state 46
	Lit            goto state 47
	Pat            goto state 18
	Ann            goto state 48
	Atom           goto state 49
	Assign         goto state 50
	Expr           goto state 51
	Call           goto state 52
	Case           goto state 53

State 33

	Type -> Type . '->' RawType                         (rule 12)
	TypeDeclBody -> Type .                              (rule 59)

	let            reduce using rule 59
	type           reduce using rule 59
	'->'           shift, and enter state 44
	%eof           reduce using rule 59


State 34

	TypeDeclBody -> SumClause . SumClauses              (rule 56)

	let            reduce using rule 52
	type           reduce using rule 52
	'|'            reduce using rule 52
	%eof           reduce using rule 52

	SumClauses     goto state 43

State 35

	Decl -> type UpperId TypesGen '=' TypeDeclBody .    (rule 62)

	let            reduce using rule 62
	type           reduce using rule 62
	%eof           reduce using rule 62


State 36

	TypeDeclBody -> '{' . ProductClauses '}'            (rule 57)
	TypeDeclBody -> '{' . '}'                           (rule 58)

	lower          shift, and enter state 2
	'}'            shift, and enter state 42

	LowerId        goto state 39
	ProductClause  goto state 40
	ProductClauses goto state 41

State 37

	SumClause -> '|' . UpperId Types                    (rule 50)

	upper          shift, and enter state 8

	UpperId        goto state 38

State 38

	SumClause -> '|' UpperId . Types                    (rule 50)

	lower          reduce using rule 8
	upper          reduce using rule 8
	let            reduce using rule 8
	type           reduce using rule 8
	'('            reduce using rule 8
	'|'            reduce using rule 8
	%eof           reduce using rule 8

	Types          goto state 91

State 39

	ProductClause -> LowerId . ':' Type                 (rule 51)

	':'            shift, and enter state 90


State 40

	ProductClauses -> ProductClause .                   (rule 54)

	'}'            reduce using rule 54
	','            reduce using rule 54


State 41

	ProductClauses -> ProductClauses . ',' ProductClause    (rule 55)
	TypeDeclBody -> '{' ProductClauses . '}'            (rule 57)

	'}'            shift, and enter state 88
	','            shift, and enter state 89


State 42

	TypeDeclBody -> '{' '}' .                           (rule 58)

	let            reduce using rule 58
	type           reduce using rule 58
	%eof           reduce using rule 58


State 43

	SumClauses -> SumClauses . SumClause                (rule 53)
	TypeDeclBody -> SumClause SumClauses .              (rule 56)

	let            reduce using rule 56
	type           reduce using rule 56
	'|'            shift, and enter state 37
	%eof           reduce using rule 56

	SumClause      goto state 87

State 44

	Type -> Type '->' . RawType                         (rule 12)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	'('            shift, and enter state 29

	LowerId        goto state 25
	UpperId        goto state 62
	RawType        goto state 86

State 45

	Pat -> LowerId .                                    (rule 13)
	Atom -> LowerId .                                   (rule 19)

	lower          reduce using rule 19
	upper          reduce using rule 19
	str            reduce using rule 19
	num            reduce using rule 19
	let            reduce using rule 19
	type           reduce using rule 19
	of             reduce using rule 19
	'='            reduce using rule 13
	'('            reduce using rule 19
	')'            reduce using rule 19
			(reduce using rule 13)

	end            reduce using rule 19
	close          reduce using rule 19
	':'            reduce using rule 13
	'+'            reduce using rule 19
	'-'            reduce using rule 19
	'*'            reduce using rule 19
	'/'            reduce using rule 19
	'>'            reduce using rule 19
	'<'            reduce using rule 19
	'>='           reduce using rule 19
	'<='           reduce using rule 19
	'=='           reduce using rule 19
	%eof           reduce using rule 19


State 46

	Atom -> UpperId .                                   (rule 20)

	lower          reduce using rule 20
	upper          reduce using rule 20
	str            reduce using rule 20
	num            reduce using rule 20
	let            reduce using rule 20
	type           reduce using rule 20
	of             reduce using rule 20
	'('            reduce using rule 20
	')'            reduce using rule 20
	end            reduce using rule 20
	close          reduce using rule 20
	'+'            reduce using rule 20
	'-'            reduce using rule 20
	'*'            reduce using rule 20
	'/'            reduce using rule 20
	'>'            reduce using rule 20
	'<'            reduce using rule 20
	'>='           reduce using rule 20
	'<='           reduce using rule 20
	'=='           reduce using rule 20
	%eof           reduce using rule 20


State 47

	Pat -> Lit .                                        (rule 14)
	Atom -> Lit .                                       (rule 18)

	lower          reduce using rule 18
	upper          reduce using rule 18
	str            reduce using rule 18
	num            reduce using rule 18
	let            reduce using rule 18
	type           reduce using rule 18
	of             reduce using rule 18
	'='            reduce using rule 14
	'('            reduce using rule 18
	')'            reduce using rule 18
			(reduce using rule 14)

	end            reduce using rule 18
	close          reduce using rule 18
	':'            reduce using rule 14
	'+'            reduce using rule 18
	'-'            reduce using rule 18
	'*'            reduce using rule 18
	'/'            reduce using rule 18
	'>'            reduce using rule 18
	'<'            reduce using rule 18
	'>='           reduce using rule 18
	'<='           reduce using rule 18
	'=='           reduce using rule 18
	%eof           reduce using rule 18


State 48

	Assign -> Ann . '=' Expr                            (rule 31)

	'='            shift, and enter state 85


State 49

	Atom -> Atom . '+' Atom                             (rule 22)
	Atom -> Atom . '-' Atom                             (rule 23)
	Atom -> Atom . '*' Atom                             (rule 24)
	Atom -> Atom . '/' Atom                             (rule 25)
	Atom -> Atom . '>' Atom                             (rule 26)
	Atom -> Atom . '<' Atom                             (rule 27)
	Atom -> Atom . '>=' Atom                            (rule 28)
	Atom -> Atom . '<=' Atom                            (rule 29)
	Atom -> Atom . '==' Atom                            (rule 30)
	Call -> Atom .                                      (rule 38)

	lower          reduce using rule 38
	upper          reduce using rule 38
	str            reduce using rule 38
	num            reduce using rule 38
	let            reduce using rule 38
	type           reduce using rule 38
	of             reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	end            reduce using rule 38
	close          reduce using rule 38
	'+'            shift, and enter state 76
	'-'            shift, and enter state 77
	'*'            shift, and enter state 78
	'/'            shift, and enter state 79
	'>'            shift, and enter state 80
	'<'            shift, and enter state 81
	'>='           shift, and enter state 82
	'<='           shift, and enter state 83
	'=='           shift, and enter state 84
	%eof           reduce using rule 38


State 50

	Expr -> Assign .                                    (rule 35)

	let            reduce using rule 35
	type           reduce using rule 35
	of             reduce using rule 35
	')'            reduce using rule 35
	end            reduce using rule 35
	close          reduce using rule 35
	%eof           reduce using rule 35


State 51

	Decl -> let LowerId Args OptRet '=' Expr .          (rule 63)

	let            reduce using rule 63
	type           reduce using rule 63
	%eof           reduce using rule 63


State 52

	Expr -> Call .                                      (rule 33)
	Call -> Call . Atom                                 (rule 37)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	str            shift, and enter state 21
	num            shift, and enter state 22
	let            reduce using rule 33
	type           reduce using rule 33
	of             reduce using rule 33
	'('            shift, and enter state 75
	')'            reduce using rule 33
	end            reduce using rule 33
	close          reduce using rule 33
	%eof           reduce using rule 33

	LowerId        goto state 72
	UpperId        goto state 46
	Lit            goto state 73
	Atom           goto state 74

State 53

	Expr -> Case .                                      (rule 36)

	let            reduce using rule 36
	type           reduce using rule 36
	of             reduce using rule 36
	')'            reduce using rule 36
	end            reduce using rule 36
	close          reduce using rule 36
	%eof           reduce using rule 36


State 54

	Expr -> do . open Sttms close                       (rule 34)

	open           shift, and enter state 71


State 55

	Case -> case . Expr of open CaseClauses close       (rule 47)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	str            shift, and enter state 21
	num            shift, and enter state 22
	do             shift, and enter state 54
	case           shift, and enter state 55
	'('            shift, and enter state 56
	'\\'           shift, and enter state 57

	LowerId        goto state 45
	UpperId        goto state 46
	Lit            goto state 47
	Pat            goto state 18
	Ann            goto state 48
	Atom           goto state 49
	Assign         goto state 50
	Expr           goto state 70
	Call           goto state 52
	Case           goto state 53

State 56

	Pat -> '(' . Pat ')'                                (rule 15)
	Ann -> '(' . Pat ':' Type ')'                       (rule 17)
	Atom -> '(' . Expr ')'                              (rule 21)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	str            shift, and enter state 21
	num            shift, and enter state 22
	do             shift, and enter state 54
	case           shift, and enter state 55
	'('            shift, and enter state 56
	'\\'           shift, and enter state 57

	LowerId        goto state 45
	UpperId        goto state 46
	Lit            goto state 47
	Pat            goto state 68
	Ann            goto state 48
	Atom           goto state 49
	Assign         goto state 50
	Expr           goto state 69
	Call           goto state 52
	Case           goto state 53

State 57

	Expr -> '\\' . Ann '->' Expr                        (rule 32)

	lower          shift, and enter state 2
	str            shift, and enter state 21
	num            shift, and enter state 22
	'('            shift, and enter state 23

	LowerId        goto state 16
	Lit            goto state 17
	Pat            goto state 18
	Ann            goto state 67

State 58

	Pat -> '(' Pat . ')'                                (rule 15)

	')'            shift, and enter state 59


State 59

	Pat -> '(' Pat ')' .                                (rule 15)

	lower          reduce using rule 15
	str            reduce using rule 15
	num            reduce using rule 15
	'='            reduce using rule 15
	'('            reduce using rule 15
	')'            reduce using rule 15
	'->'           reduce using rule 15
	':'            reduce using rule 15


State 60

	Ann -> '(' Pat ':' . Type ')'                       (rule 17)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	'('            shift, and enter state 29

	LowerId        goto state 25
	UpperId        goto state 26
	RawType        goto state 27
	Type           goto state 66

State 61

	RawType -> '(' Type . ')'                           (rule 7)
	Type -> Type . '->' RawType                         (rule 12)

	')'            shift, and enter state 65
	'->'           shift, and enter state 44


State 62

	RawType -> UpperId .                                (rule 6)

	lower          reduce using rule 6
	upper          reduce using rule 6
	let            reduce using rule 6
	type           reduce using rule 6
	'='            reduce using rule 6
	'('            reduce using rule 6
	')'            reduce using rule 6
	'}'            reduce using rule 6
	'->'           reduce using rule 6
	'|'            reduce using rule 6
	','            reduce using rule 6
	%eof           reduce using rule 6


State 63

	Type -> UpperId RawType . Types                     (rule 11)

	lower          reduce using rule 8
	upper          reduce using rule 8
	let            reduce using rule 8
	type           reduce using rule 8
	'='            reduce using rule 8
	'('            reduce using rule 8
	')'            reduce using rule 8
	'}'            reduce using rule 8
	'->'           reduce using rule 8
	','            reduce using rule 8
	%eof           reduce using rule 8

	Types          goto state 64

State 64

	Types -> Types . RawType                            (rule 9)
	Type -> UpperId RawType Types .                     (rule 11)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	let            reduce using rule 11
	type           reduce using rule 11
	'='            reduce using rule 11
	'('            shift, and enter state 29
	')'            reduce using rule 11
	'}'            reduce using rule 11
	'->'           reduce using rule 11
	','            reduce using rule 11
	%eof           reduce using rule 11

	LowerId        goto state 25
	UpperId        goto state 62
	RawType        goto state 92

State 65

	RawType -> '(' Type ')' .                           (rule 7)

	lower          reduce using rule 7
	upper          reduce using rule 7
	let            reduce using rule 7
	type           reduce using rule 7
	'='            reduce using rule 7
	'('            reduce using rule 7
	')'            reduce using rule 7
	'}'            reduce using rule 7
	'->'           reduce using rule 7
	'|'            reduce using rule 7
	','            reduce using rule 7
	%eof           reduce using rule 7


State 66

	Type -> Type . '->' RawType                         (rule 12)
	Ann -> '(' Pat ':' Type . ')'                       (rule 17)

	')'            shift, and enter state 110
	'->'           shift, and enter state 44


State 67

	Expr -> '\\' Ann . '->' Expr                        (rule 32)

	'->'           shift, and enter state 109


State 68

	Pat -> '(' Pat . ')'                                (rule 15)
	Ann -> Pat .                                        (rule 16)
	Ann -> '(' Pat . ':' Type ')'                       (rule 17)

	'='            reduce using rule 16
	')'            shift, and enter state 59
	':'            shift, and enter state 60


State 69

	Atom -> '(' Expr . ')'                              (rule 21)

	')'            shift, and enter state 108


State 70

	Case -> case Expr . of open CaseClauses close       (rule 47)

	of             shift, and enter state 107


State 71

	Expr -> do open . Sttms close                       (rule 34)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	str            shift, and enter state 21
	num            shift, and enter state 22
	do             shift, and enter state 54
	case           shift, and enter state 55
	'('            shift, and enter state 56
	close          reduce using rule 39
	'\\'           shift, and enter state 57

	LowerId        goto state 45
	UpperId        goto state 46
	Lit            goto state 47
	Pat            goto state 18
	Ann            goto state 48
	Atom           goto state 49
	Assign         goto state 50
	Expr           goto state 105
	Call           goto state 52
	Sttms          goto state 106
	Case           goto state 53

State 72

	Atom -> LowerId .                                   (rule 19)

	lower          reduce using rule 19
	upper          reduce using rule 19
	str            reduce using rule 19
	num            reduce using rule 19
	let            reduce using rule 19
	type           reduce using rule 19
	of             reduce using rule 19
	'('            reduce using rule 19
	')'            reduce using rule 19
	end            reduce using rule 19
	close          reduce using rule 19
	'+'            reduce using rule 19
	'-'            reduce using rule 19
	'*'            reduce using rule 19
	'/'            reduce using rule 19
	'>'            reduce using rule 19
	'<'            reduce using rule 19
	'>='           reduce using rule 19
	'<='           reduce using rule 19
	'=='           reduce using rule 19
	%eof           reduce using rule 19


State 73

	Atom -> Lit .                                       (rule 18)

	lower          reduce using rule 18
	upper          reduce using rule 18
	str            reduce using rule 18
	num            reduce using rule 18
	let            reduce using rule 18
	type           reduce using rule 18
	of             reduce using rule 18
	'('            reduce using rule 18
	')'            reduce using rule 18
	end            reduce using rule 18
	close          reduce using rule 18
	'+'            reduce using rule 18
	'-'            reduce using rule 18
	'*'            reduce using rule 18
	'/'            reduce using rule 18
	'>'            reduce using rule 18
	'<'            reduce using rule 18
	'>='           reduce using rule 18
	'<='           reduce using rule 18
	'=='           reduce using rule 18
	%eof           reduce using rule 18


State 74

	Atom -> Atom . '+' Atom                             (rule 22)
	Atom -> Atom . '-' Atom                             (rule 23)
	Atom -> Atom . '*' Atom                             (rule 24)
	Atom -> Atom . '/' Atom                             (rule 25)
	Atom -> Atom . '>' Atom                             (rule 26)
	Atom -> Atom . '<' Atom                             (rule 27)
	Atom -> Atom . '>=' Atom                            (rule 28)
	Atom -> Atom . '<=' Atom                            (rule 29)
	Atom -> Atom . '==' Atom                            (rule 30)
	Call -> Call Atom .                                 (rule 37)

	lower          reduce using rule 37
	upper          reduce using rule 37
	str            reduce using rule 37
	num            reduce using rule 37
	let            reduce using rule 37
	type           reduce using rule 37
	of             reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	end            reduce using rule 37
	close          reduce using rule 37
	'+'            shift, and enter state 76
	'-'            shift, and enter state 77
	'*'            shift, and enter state 78
	'/'            shift, and enter state 79
	'>'            shift, and enter state 80
	'<'            shift, and enter state 81
	'>='           shift, and enter state 82
	'<='           shift, and enter state 83
	'=='           shift, and enter state 84
	%eof           reduce using rule 37


State 75

	Atom -> '(' . Expr ')'                              (rule 21)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	str            shift, and enter state 21
	num            shift, and enter state 22
	do             shift, and enter state 54
	case           shift, and enter state 55
	'('            shift, and enter state 56
	'\\'           shift, and enter state 57

	LowerId        goto state 45
	UpperId        goto state 46
	Lit            goto state 47
	Pat            goto state 18
	Ann            goto state 48
	Atom           goto state 49
	Assign         goto state 50
	Expr           goto state 69
	Call           goto state 52
	Case           goto state 53

State 76

	Atom -> Atom '+' . Atom                             (rule 22)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	str            shift, and enter state 21
	num            shift, and enter state 22
	'('            shift, and enter state 75

	LowerId        goto state 72
	UpperId        goto state 46
	Lit            goto state 73
	Atom           goto state 104

State 77

	Atom -> Atom '-' . Atom                             (rule 23)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	str            shift, and enter state 21
	num            shift, and enter state 22
	'('            shift, and enter state 75

	LowerId        goto state 72
	UpperId        goto state 46
	Lit            goto state 73
	Atom           goto state 103

State 78

	Atom -> Atom '*' . Atom                             (rule 24)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	str            shift, and enter state 21
	num            shift, and enter state 22
	'('            shift, and enter state 75

	LowerId        goto state 72
	UpperId        goto state 46
	Lit            goto state 73
	Atom           goto state 102

State 79

	Atom -> Atom '/' . Atom                             (rule 25)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	str            shift, and enter state 21
	num            shift, and enter state 22
	'('            shift, and enter state 75

	LowerId        goto state 72
	UpperId        goto state 46
	Lit            goto state 73
	Atom           goto state 101

State 80

	Atom -> Atom '>' . Atom                             (rule 26)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	str            shift, and enter state 21
	num            shift, and enter state 22
	'('            shift, and enter state 75

	LowerId        goto state 72
	UpperId        goto state 46
	Lit            goto state 73
	Atom           goto state 100

State 81

	Atom -> Atom '<' . Atom                             (rule 27)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	str            shift, and enter state 21
	num            shift, and enter state 22
	'('            shift, and enter state 75

	LowerId        goto state 72
	UpperId        goto state 46
	Lit            goto state 73
	Atom           goto state 99

State 82

	Atom -> Atom '>=' . Atom                            (rule 28)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	str            shift, and enter state 21
	num            shift, and enter state 22
	'('            shift, and enter state 75

	LowerId        goto state 72
	UpperId        goto state 46
	Lit            goto state 73
	Atom           goto state 98

State 83

	Atom -> Atom '<=' . Atom                            (rule 29)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	str            shift, and enter state 21
	num            shift, and enter state 22
	'('            shift, and enter state 75

	LowerId        goto state 72
	UpperId        goto state 46
	Lit            goto state 73
	Atom           goto state 97

State 84

	Atom -> Atom '==' . Atom                            (rule 30)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	str            shift, and enter state 21
	num            shift, and enter state 22
	'('            shift, and enter state 75

	LowerId        goto state 72
	UpperId        goto state 46
	Lit            goto state 73
	Atom           goto state 96

State 85

	Assign -> Ann '=' . Expr                            (rule 31)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	str            shift, and enter state 21
	num            shift, and enter state 22
	do             shift, and enter state 54
	case           shift, and enter state 55
	'('            shift, and enter state 56
	'\\'           shift, and enter state 57

	LowerId        goto state 45
	UpperId        goto state 46
	Lit            goto state 47
	Pat            goto state 18
	Ann            goto state 48
	Atom           goto state 49
	Assign         goto state 50
	Expr           goto state 95
	Call           goto state 52
	Case           goto state 53

State 86

	Type -> Type '->' RawType .                         (rule 12)

	let            reduce using rule 12
	type           reduce using rule 12
	'='            reduce using rule 12
	')'            reduce using rule 12
	'}'            reduce using rule 12
	'->'           reduce using rule 12
	','            reduce using rule 12
	%eof           reduce using rule 12


State 87

	SumClauses -> SumClauses SumClause .                (rule 53)

	let            reduce using rule 53
	type           reduce using rule 53
	'|'            reduce using rule 53
	%eof           reduce using rule 53


State 88

	TypeDeclBody -> '{' ProductClauses '}' .            (rule 57)

	let            reduce using rule 57
	type           reduce using rule 57
	%eof           reduce using rule 57


State 89

	ProductClauses -> ProductClauses ',' . ProductClause    (rule 55)

	lower          shift, and enter state 2

	LowerId        goto state 39
	ProductClause  goto state 94

State 90

	ProductClause -> LowerId ':' . Type                 (rule 51)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	'('            shift, and enter state 29

	LowerId        goto state 25
	UpperId        goto state 26
	RawType        goto state 27
	Type           goto state 93

State 91

	Types -> Types . RawType                            (rule 9)
	SumClause -> '|' UpperId Types .                    (rule 50)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	let            reduce using rule 50
	type           reduce using rule 50
	'('            shift, and enter state 29
	'|'            reduce using rule 50
	%eof           reduce using rule 50

	LowerId        goto state 25
	UpperId        goto state 62
	RawType        goto state 92

State 92

	Types -> Types RawType .                            (rule 9)

	lower          reduce using rule 9
	upper          reduce using rule 9
	let            reduce using rule 9
	type           reduce using rule 9
	'='            reduce using rule 9
	'('            reduce using rule 9
	')'            reduce using rule 9
	'}'            reduce using rule 9
	'->'           reduce using rule 9
	'|'            reduce using rule 9
	','            reduce using rule 9
	%eof           reduce using rule 9


State 93

	Type -> Type . '->' RawType                         (rule 12)
	ProductClause -> LowerId ':' Type .                 (rule 51)

	'}'            reduce using rule 51
	'->'           shift, and enter state 44
	','            reduce using rule 51


State 94

	ProductClauses -> ProductClauses ',' ProductClause .    (rule 55)

	'}'            reduce using rule 55
	','            reduce using rule 55


State 95

	Assign -> Ann '=' Expr .                            (rule 31)

	let            reduce using rule 31
	type           reduce using rule 31
	of             reduce using rule 31
	')'            reduce using rule 31
	end            reduce using rule 31
	close          reduce using rule 31
	%eof           reduce using rule 31


State 96

	Atom -> Atom . '+' Atom                             (rule 22)
	Atom -> Atom . '-' Atom                             (rule 23)
	Atom -> Atom . '*' Atom                             (rule 24)
	Atom -> Atom . '/' Atom                             (rule 25)
	Atom -> Atom . '>' Atom                             (rule 26)
	Atom -> Atom . '<' Atom                             (rule 27)
	Atom -> Atom . '>=' Atom                            (rule 28)
	Atom -> Atom . '<=' Atom                            (rule 29)
	Atom -> Atom . '==' Atom                            (rule 30)
	Atom -> Atom '==' Atom .                            (rule 30)

	lower          reduce using rule 30
	upper          reduce using rule 30
	str            reduce using rule 30
	num            reduce using rule 30
	let            reduce using rule 30
	type           reduce using rule 30
	of             reduce using rule 30
	'('            reduce using rule 30
	')'            reduce using rule 30
	end            reduce using rule 30
	close          reduce using rule 30
	'+'            reduce using rule 30
	'-'            reduce using rule 30
	'*'            reduce using rule 30
	'/'            reduce using rule 30
	'>'            fail
	'<'            fail
	'>='           fail
	'<='           fail
	'=='           fail
	%eof           reduce using rule 30


State 97

	Atom -> Atom . '+' Atom                             (rule 22)
	Atom -> Atom . '-' Atom                             (rule 23)
	Atom -> Atom . '*' Atom                             (rule 24)
	Atom -> Atom . '/' Atom                             (rule 25)
	Atom -> Atom . '>' Atom                             (rule 26)
	Atom -> Atom . '<' Atom                             (rule 27)
	Atom -> Atom . '>=' Atom                            (rule 28)
	Atom -> Atom . '<=' Atom                            (rule 29)
	Atom -> Atom '<=' Atom .                            (rule 29)
	Atom -> Atom . '==' Atom                            (rule 30)

	lower          reduce using rule 29
	upper          reduce using rule 29
	str            reduce using rule 29
	num            reduce using rule 29
	let            reduce using rule 29
	type           reduce using rule 29
	of             reduce using rule 29
	'('            reduce using rule 29
	')'            reduce using rule 29
	end            reduce using rule 29
	close          reduce using rule 29
	'+'            reduce using rule 29
	'-'            reduce using rule 29
	'*'            reduce using rule 29
	'/'            reduce using rule 29
	'>'            fail
	'<'            fail
	'>='           fail
	'<='           fail
	'=='           fail
	%eof           reduce using rule 29


State 98

	Atom -> Atom . '+' Atom                             (rule 22)
	Atom -> Atom . '-' Atom                             (rule 23)
	Atom -> Atom . '*' Atom                             (rule 24)
	Atom -> Atom . '/' Atom                             (rule 25)
	Atom -> Atom . '>' Atom                             (rule 26)
	Atom -> Atom . '<' Atom                             (rule 27)
	Atom -> Atom . '>=' Atom                            (rule 28)
	Atom -> Atom '>=' Atom .                            (rule 28)
	Atom -> Atom . '<=' Atom                            (rule 29)
	Atom -> Atom . '==' Atom                            (rule 30)

	lower          reduce using rule 28
	upper          reduce using rule 28
	str            reduce using rule 28
	num            reduce using rule 28
	let            reduce using rule 28
	type           reduce using rule 28
	of             reduce using rule 28
	'('            reduce using rule 28
	')'            reduce using rule 28
	end            reduce using rule 28
	close          reduce using rule 28
	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'*'            reduce using rule 28
	'/'            reduce using rule 28
	'>'            fail
	'<'            fail
	'>='           fail
	'<='           fail
	'=='           fail
	%eof           reduce using rule 28


State 99

	Atom -> Atom . '+' Atom                             (rule 22)
	Atom -> Atom . '-' Atom                             (rule 23)
	Atom -> Atom . '*' Atom                             (rule 24)
	Atom -> Atom . '/' Atom                             (rule 25)
	Atom -> Atom . '>' Atom                             (rule 26)
	Atom -> Atom . '<' Atom                             (rule 27)
	Atom -> Atom '<' Atom .                             (rule 27)
	Atom -> Atom . '>=' Atom                            (rule 28)
	Atom -> Atom . '<=' Atom                            (rule 29)
	Atom -> Atom . '==' Atom                            (rule 30)

	lower          reduce using rule 27
	upper          reduce using rule 27
	str            reduce using rule 27
	num            reduce using rule 27
	let            reduce using rule 27
	type           reduce using rule 27
	of             reduce using rule 27
	'('            reduce using rule 27
	')'            reduce using rule 27
	end            reduce using rule 27
	close          reduce using rule 27
	'+'            reduce using rule 27
	'-'            reduce using rule 27
	'*'            reduce using rule 27
	'/'            reduce using rule 27
	'>'            fail
	'<'            fail
	'>='           fail
	'<='           fail
	'=='           fail
	%eof           reduce using rule 27


State 100

	Atom -> Atom . '+' Atom                             (rule 22)
	Atom -> Atom . '-' Atom                             (rule 23)
	Atom -> Atom . '*' Atom                             (rule 24)
	Atom -> Atom . '/' Atom                             (rule 25)
	Atom -> Atom . '>' Atom                             (rule 26)
	Atom -> Atom '>' Atom .                             (rule 26)
	Atom -> Atom . '<' Atom                             (rule 27)
	Atom -> Atom . '>=' Atom                            (rule 28)
	Atom -> Atom . '<=' Atom                            (rule 29)
	Atom -> Atom . '==' Atom                            (rule 30)

	lower          reduce using rule 26
	upper          reduce using rule 26
	str            reduce using rule 26
	num            reduce using rule 26
	let            reduce using rule 26
	type           reduce using rule 26
	of             reduce using rule 26
	'('            reduce using rule 26
	')'            reduce using rule 26
	end            reduce using rule 26
	close          reduce using rule 26
	'+'            reduce using rule 26
	'-'            reduce using rule 26
	'*'            reduce using rule 26
	'/'            reduce using rule 26
	'>'            fail
	'<'            fail
	'>='           fail
	'<='           fail
	'=='           fail
	%eof           reduce using rule 26


State 101

	Atom -> Atom . '+' Atom                             (rule 22)
	Atom -> Atom . '-' Atom                             (rule 23)
	Atom -> Atom . '*' Atom                             (rule 24)
	Atom -> Atom . '/' Atom                             (rule 25)
	Atom -> Atom '/' Atom .                             (rule 25)
	Atom -> Atom . '>' Atom                             (rule 26)
	Atom -> Atom . '<' Atom                             (rule 27)
	Atom -> Atom . '>=' Atom                            (rule 28)
	Atom -> Atom . '<=' Atom                            (rule 29)
	Atom -> Atom . '==' Atom                            (rule 30)

	lower          reduce using rule 25
	upper          reduce using rule 25
	str            reduce using rule 25
	num            reduce using rule 25
	let            reduce using rule 25
	type           reduce using rule 25
	of             reduce using rule 25
	'('            reduce using rule 25
	')'            reduce using rule 25
	end            reduce using rule 25
	close          reduce using rule 25
	'+'            reduce using rule 25
	'-'            reduce using rule 25
	'*'            reduce using rule 25
	'/'            reduce using rule 25
	'>'            shift, and enter state 80
	'<'            shift, and enter state 81
	'>='           shift, and enter state 82
	'<='           shift, and enter state 83
	'=='           shift, and enter state 84
	%eof           reduce using rule 25


State 102

	Atom -> Atom . '+' Atom                             (rule 22)
	Atom -> Atom . '-' Atom                             (rule 23)
	Atom -> Atom . '*' Atom                             (rule 24)
	Atom -> Atom '*' Atom .                             (rule 24)
	Atom -> Atom . '/' Atom                             (rule 25)
	Atom -> Atom . '>' Atom                             (rule 26)
	Atom -> Atom . '<' Atom                             (rule 27)
	Atom -> Atom . '>=' Atom                            (rule 28)
	Atom -> Atom . '<=' Atom                            (rule 29)
	Atom -> Atom . '==' Atom                            (rule 30)

	lower          reduce using rule 24
	upper          reduce using rule 24
	str            reduce using rule 24
	num            reduce using rule 24
	let            reduce using rule 24
	type           reduce using rule 24
	of             reduce using rule 24
	'('            reduce using rule 24
	')'            reduce using rule 24
	end            reduce using rule 24
	close          reduce using rule 24
	'+'            reduce using rule 24
	'-'            reduce using rule 24
	'*'            reduce using rule 24
	'/'            reduce using rule 24
	'>'            shift, and enter state 80
	'<'            shift, and enter state 81
	'>='           shift, and enter state 82
	'<='           shift, and enter state 83
	'=='           shift, and enter state 84
	%eof           reduce using rule 24


State 103

	Atom -> Atom . '+' Atom                             (rule 22)
	Atom -> Atom . '-' Atom                             (rule 23)
	Atom -> Atom '-' Atom .                             (rule 23)
	Atom -> Atom . '*' Atom                             (rule 24)
	Atom -> Atom . '/' Atom                             (rule 25)
	Atom -> Atom . '>' Atom                             (rule 26)
	Atom -> Atom . '<' Atom                             (rule 27)
	Atom -> Atom . '>=' Atom                            (rule 28)
	Atom -> Atom . '<=' Atom                            (rule 29)
	Atom -> Atom . '==' Atom                            (rule 30)

	lower          reduce using rule 23
	upper          reduce using rule 23
	str            reduce using rule 23
	num            reduce using rule 23
	let            reduce using rule 23
	type           reduce using rule 23
	of             reduce using rule 23
	'('            reduce using rule 23
	')'            reduce using rule 23
	end            reduce using rule 23
	close          reduce using rule 23
	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'*'            shift, and enter state 78
	'/'            shift, and enter state 79
	'>'            shift, and enter state 80
	'<'            shift, and enter state 81
	'>='           shift, and enter state 82
	'<='           shift, and enter state 83
	'=='           shift, and enter state 84
	%eof           reduce using rule 23


State 104

	Atom -> Atom . '+' Atom                             (rule 22)
	Atom -> Atom '+' Atom .                             (rule 22)
	Atom -> Atom . '-' Atom                             (rule 23)
	Atom -> Atom . '*' Atom                             (rule 24)
	Atom -> Atom . '/' Atom                             (rule 25)
	Atom -> Atom . '>' Atom                             (rule 26)
	Atom -> Atom . '<' Atom                             (rule 27)
	Atom -> Atom . '>=' Atom                            (rule 28)
	Atom -> Atom . '<=' Atom                            (rule 29)
	Atom -> Atom . '==' Atom                            (rule 30)

	lower          reduce using rule 22
	upper          reduce using rule 22
	str            reduce using rule 22
	num            reduce using rule 22
	let            reduce using rule 22
	type           reduce using rule 22
	of             reduce using rule 22
	'('            reduce using rule 22
	')'            reduce using rule 22
	end            reduce using rule 22
	close          reduce using rule 22
	'+'            reduce using rule 22
	'-'            reduce using rule 22
	'*'            shift, and enter state 78
	'/'            shift, and enter state 79
	'>'            shift, and enter state 80
	'<'            shift, and enter state 81
	'>='           shift, and enter state 82
	'<='           shift, and enter state 83
	'=='           shift, and enter state 84
	%eof           reduce using rule 22


State 105

	Sttms -> Expr .                                     (rule 40)
	Sttms -> Expr . end Sttms                           (rule 41)

	end            shift, and enter state 114
	close          reduce using rule 40


State 106

	Expr -> do open Sttms . close                       (rule 34)

	close          shift, and enter state 113


State 107

	Case -> case Expr of . open CaseClauses close       (rule 47)

	open           shift, and enter state 112


State 108

	Atom -> '(' Expr ')' .                              (rule 21)

	lower          reduce using rule 21
	upper          reduce using rule 21
	str            reduce using rule 21
	num            reduce using rule 21
	let            reduce using rule 21
	type           reduce using rule 21
	of             reduce using rule 21
	'('            reduce using rule 21
	')'            reduce using rule 21
	end            reduce using rule 21
	close          reduce using rule 21
	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'*'            reduce using rule 21
	'/'            reduce using rule 21
	'>'            reduce using rule 21
	'<'            reduce using rule 21
	'>='           reduce using rule 21
	'<='           reduce using rule 21
	'=='           reduce using rule 21
	%eof           reduce using rule 21


State 109

	Expr -> '\\' Ann '->' . Expr                        (rule 32)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	str            shift, and enter state 21
	num            shift, and enter state 22
	do             shift, and enter state 54
	case           shift, and enter state 55
	'('            shift, and enter state 56
	'\\'           shift, and enter state 57

	LowerId        goto state 45
	UpperId        goto state 46
	Lit            goto state 47
	Pat            goto state 18
	Ann            goto state 48
	Atom           goto state 49
	Assign         goto state 50
	Expr           goto state 111
	Call           goto state 52
	Case           goto state 53

State 110

	Ann -> '(' Pat ':' Type ')' .                       (rule 17)

	lower          reduce using rule 17
	str            reduce using rule 17
	num            reduce using rule 17
	'='            reduce using rule 17
	'('            reduce using rule 17
	'->'           reduce using rule 17
	':'            reduce using rule 17


State 111

	Expr -> '\\' Ann '->' Expr .                        (rule 32)

	let            reduce using rule 32
	type           reduce using rule 32
	of             reduce using rule 32
	')'            reduce using rule 32
	end            reduce using rule 32
	close          reduce using rule 32
	%eof           reduce using rule 32


State 112

	Case -> case Expr of open . CaseClauses close       (rule 47)

	lower          shift, and enter state 2
	str            shift, and enter state 21
	num            shift, and enter state 22
	'('            shift, and enter state 31

	LowerId        goto state 16
	Lit            goto state 17
	Pat            goto state 116
	CaseClause     goto state 117
	CaseClauses    goto state 118

State 113

	Expr -> do open Sttms close .                       (rule 34)

	let            reduce using rule 34
	type           reduce using rule 34
	of             reduce using rule 34
	')'            reduce using rule 34
	end            reduce using rule 34
	close          reduce using rule 34
	%eof           reduce using rule 34


State 114

	Sttms -> Expr end . Sttms                           (rule 41)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	str            shift, and enter state 21
	num            shift, and enter state 22
	do             shift, and enter state 54
	case           shift, and enter state 55
	'('            shift, and enter state 56
	close          reduce using rule 39
	'\\'           shift, and enter state 57

	LowerId        goto state 45
	UpperId        goto state 46
	Lit            goto state 47
	Pat            goto state 18
	Ann            goto state 48
	Atom           goto state 49
	Assign         goto state 50
	Expr           goto state 105
	Call           goto state 52
	Sttms          goto state 115
	Case           goto state 53

State 115

	Sttms -> Expr end Sttms .                           (rule 41)

	close          reduce using rule 41


State 116

	CaseClause -> Pat . '->' Expr                       (rule 44)

	'->'           shift, and enter state 121


State 117

	CaseClauses -> CaseClause .                         (rule 45)

	end            reduce using rule 45
	close          reduce using rule 45


State 118

	CaseClauses -> CaseClauses . end CaseClause         (rule 46)
	Case -> case Expr of open CaseClauses . close       (rule 47)

	end            shift, and enter state 119
	close          shift, and enter state 120


State 119

	CaseClauses -> CaseClauses end . CaseClause         (rule 46)

	lower          shift, and enter state 2
	str            shift, and enter state 21
	num            shift, and enter state 22
	'('            shift, and enter state 31

	LowerId        goto state 16
	Lit            goto state 17
	Pat            goto state 116
	CaseClause     goto state 123

State 120

	Case -> case Expr of open CaseClauses close .       (rule 47)

	let            reduce using rule 47
	type           reduce using rule 47
	of             reduce using rule 47
	')'            reduce using rule 47
	end            reduce using rule 47
	close          reduce using rule 47
	%eof           reduce using rule 47


State 121

	CaseClause -> Pat '->' . Expr                       (rule 44)

	lower          shift, and enter state 2
	upper          shift, and enter state 8
	str            shift, and enter state 21
	num            shift, and enter state 22
	do             shift, and enter state 54
	case           shift, and enter state 55
	'('            shift, and enter state 56
	'\\'           shift, and enter state 57

	LowerId        goto state 45
	UpperId        goto state 46
	Lit            goto state 47
	Pat            goto state 18
	Ann            goto state 48
	Atom           goto state 49
	Assign         goto state 50
	Expr           goto state 122
	Call           goto state 52
	Case           goto state 53

State 122

	CaseClause -> Pat '->' Expr .                       (rule 44)

	end            reduce using rule 44
	close          reduce using rule 44


State 123

	CaseClauses -> CaseClauses end CaseClause .         (rule 46)

	end            reduce using rule 46
	close          reduce using rule 46


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 66
Number of terminals: 34
Number of non-terminals: 27
Number of states: 124
