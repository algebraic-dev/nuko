✓ That
 └Prod
   ├Program
   | ├typeDecls:
   | | └List
   | |   ├TypeDecl
   | |   | ├tyName: (ReId List 0:5-0:9)
   | |   | ├tyArgs: (List (ReId a 0:10-0:11))
   | |   | └tyDecl:
   | |   |   └TypeSum
   | |   |     └NonEmpty
   | |   |       ├Prod
   | |   |       | ├ReId Cons 1:4-1:8
   | |   |       | └List (Type (Main.List [No 0])) (Type [No 0])
   | |   |       └Prod
   | |   |         ├ReId Nil 2:4-2:7
   | |   |         └List
   | |   |           └Type ((((((((((Main.User [No 0]) Prelude.Int) Prelude.Int) Prelude.Int) Prelude.Int) [No 0]) [No 0]) [No 0]) [No 0]) [No 0])
   | |   └TypeDecl
   | |     ├tyName: (ReId User 4:5-4:9)
   | |     ├tyArgs:
   | |     | └List
   | |     |   ├ReId c 4:10-4:11
   | |     |   ├ReId d 4:12-4:13
   | |     |   ├ReId e 4:14-4:15
   | |     |   ├ReId f 4:16-4:17
   | |     |   ├ReId g 4:18-4:19
   | |     |   ├ReId a 4:20-4:21
   | |     |   ├ReId b 4:22-4:23
   | |     |   ├ReId t 4:24-4:25
   | |     |   ├ReId y 4:26-4:27
   | |     |   └ReId u 4:28-4:29
   | |     └tyDecl:
   | |       └TypeProd
   | |         └List
   | |           ├Prod
   | |           | ├ReId name 5:2-5:6
   | |           | └Type (forall c. (forall d. (forall e. (forall f. (forall g. (forall a. (forall b. (forall t. (forall y. (forall u. (((((((((((User c) d) e) f) g) a) b) t) y) u) -> Prelude.String)))))))))))
   | |           ├Prod
   | |           | ├ReId age 6:2-6:5
   | |           | └Type (forall c. (forall d. (forall e. (forall f. (forall g. (forall a. (forall b. (forall t. (forall y. (forall u. (((((((((((User c) d) e) f) g) a) b) t) y) u) -> Prelude.Int)))))))))))
   | |           ├Prod
   | |           | ├ReId likes 7:2-7:7
   | |           | └Type (forall c. (forall d. (forall e. (forall f. (forall g. (forall a. (forall b. (forall t. (forall y. (forall u. (((((((((((User c) d) e) f) g) a) b) t) y) u) -> (Main.List Prelude.Int))))))))))))
   | |           └Prod
   | |             ├ReId data 8:2-8:6
   | |             └Type (forall c. (forall d. (forall e. (forall f. (forall g. (forall a. (forall b. (forall t. (forall y. (forall u. (((((((((((User c) d) e) f) g) a) b) t) y) u) -> (Main.List a))))))))))))
   | ├letDecls: Empty List
   | ├impDecls: Empty List
   | └programExt: NoExt
   └TypingEnv
     ├_teCurModule: Main
     └_globalTypingEnv:
       └TypeSpace
         ├_tsTypes:
         | └HashMap
         |   ├Prod
         |   | ├Prelude.Int
         |   | └Prod
         |   |   ├Kind *
         |   |   └IsTyDef
         |   ├Prod
         |   | ├Main.User
         |   | └Prod
         |   |   ├Kind (* -> (* -> (* -> (* -> (* -> (* -> (* -> (* -> (* -> (* -> *))))))))))
         |   |   └IsTyDef
         |   ├Prod
         |   | ├Prelude.String
         |   | └Prod
         |   |   ├Kind *
         |   |   └IsTyDef
         |   └Prod
         |     ├Main.List
         |     └Prod
         |       ├Kind (* -> *)
         |       └IsTyDef
         ├_tsConstructors:
         | └HashMap
         |   ├Prod
         |   | ├Main.Nil
         |   | └Prod
         |   |   ├Type (forall a. (((((((((((Main.User a) Prelude.Int) Prelude.Int) Prelude.Int) Prelude.Int) a) a) a) a) a) -> (List a)))
         |   |   └1
         |   └Prod
         |     ├Main.Cons
         |     └Prod
         |       ├Type (forall a. (a -> ((Main.List a) -> (List a))))
         |       └2
         ├_tsVars: HashMap
         └_tsTypeFields:
           └HashMap
             └Prod
               ├Main.User
               └HashMap
                 ├Prod
                 | ├likes
                 | └FieldInfo
                 |   └_fiResultType:
                 |     └Type (forall c. (forall d. (forall e. (forall f. (forall g. (forall a. (forall b. (forall t. (forall y. (forall u. (((((((((((User c) d) e) f) g) a) b) t) y) u) -> (Main.List Prelude.Int))))))))))))
                 ├Prod
                 | ├name
                 | └FieldInfo
                 |   └_fiResultType:
                 |     └Type (forall c. (forall d. (forall e. (forall f. (forall g. (forall a. (forall b. (forall t. (forall y. (forall u. (((((((((((User c) d) e) f) g) a) b) t) y) u) -> Prelude.String)))))))))))
                 ├Prod
                 | ├data
                 | └FieldInfo
                 |   └_fiResultType:
                 |     └Type (forall c. (forall d. (forall e. (forall f. (forall g. (forall a. (forall b. (forall t. (forall y. (forall u. (((((((((((User c) d) e) f) g) a) b) t) y) u) -> (Main.List a))))))))))))
                 └Prod
                   ├age
                   └FieldInfo
                     └_fiResultType:
                       └Type (forall c. (forall d. (forall e. (forall f. (forall g. (forall a. (forall b. (forall t. (forall y. (forall u. (((((((((((User c) d) e) f) g) a) b) t) y) u) -> Prelude.Int)))))))))))
